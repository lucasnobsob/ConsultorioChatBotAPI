// <auto-generated />
using System;
using ConsultorioChatBot.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsultorioChatBot.Data.Migrations
{
    [DbContext(typeof(ConsultorioDbContext))]
    [Migration("20241106015852_InitialSeed")]
    partial class InitialSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsultorioChatBot.Business.Models.Agenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Confirmacao")
                        .HasColumnType("bit");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Agenda", (string)null);
                });

            modelBuilder.Entity("ConsultorioChatBot.Business.Models.Exame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("DuracaoHoras")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Exame", (string)null);
                });

            modelBuilder.Entity("ConsultorioChatBot.Business.Models.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Medicos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b073252-4baf-4ed2-bc47-02e82ad921eb"),
                            CRM = "101196/SP",
                            Especialidade = "Gastroenterologia",
                            Nome = "Alexandre Campos"
                        });
                });

            modelBuilder.Entity("ConsultorioChatBot.Business.Models.PreparoExame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ExameId");

                    b.ToTable("PreparoExame", (string)null);
                });

            modelBuilder.Entity("ConsultorioChatBot.Business.Models.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TipoServico")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Servicos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dce5e3a4-73c6-45dd-8e83-25bfb9cb6501"),
                            Descricao = "# Consulta Ou Retorno  - Atendimento Presencial.",
                            TipoServico = 0
                        },
                        new
                        {
                            Id = new Guid("6ac83258-188f-443a-95b9-a6cc360f57a1"),
                            Descricao = "Endoscopia Digestiva Alta E Depois digite 60.",
                            TipoServico = 1
                        },
                        new
                        {
                            Id = new Guid("e84c60ad-3e4f-454e-8d98-9e1e98421305"),
                            Descricao = "Exame Colonoscopia nº 60 Para Preparo.",
                            TipoServico = 1
                        },
                        new
                        {
                            Id = new Guid("be6d6493-0d50-449e-b51c-a74455198044"),
                            Descricao = "Virtual Atendimento Via Online.",
                            TipoServico = 0
                        },
                        new
                        {
                            Id = new Guid("03c64136-8d2a-4468-9bf5-9be395d5be96"),
                            Descricao = "§ Endoscopia + Colonoscopia nº60 Preparo",
                            TipoServico = 1
                        });
                });

            modelBuilder.Entity("ConsultorioChatBot.Business.Models.Agenda", b =>
                {
                    b.HasOne("ConsultorioChatBot.Business.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .IsRequired();

                    b.HasOne("ConsultorioChatBot.Business.Models.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("ConsultorioChatBot.Business.Models.PreparoExame", b =>
                {
                    b.HasOne("ConsultorioChatBot.Business.Models.Exame", "Exame")
                        .WithMany()
                        .HasForeignKey("ExameId")
                        .IsRequired();

                    b.Navigation("Exame");
                });
#pragma warning restore 612, 618
        }
    }
}
